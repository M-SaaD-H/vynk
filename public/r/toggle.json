{
  "name": "toggle",
  "title": "Toggle",
  "description": "A Simple fluidic animated toggle",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/toggle.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { cn } from \"@/lib/utils\"\n\nimport { useAnimate } from \"motion/react\"\n\nexport interface ToggleProps\n  extends Omit<React.HTMLAttributes<HTMLDivElement>, \"onClick\"> {\n  isOn: boolean,\n  toggleOn: () => void\n}\n\nconst Toggle = React.forwardRef<HTMLDivElement, ToggleProps>(\n  ({ className, isOn, toggleOn, ...props }, ref) => {\n    const [scope, animate] = useAnimate();\n\n    const isMounted = React.useRef(true);\n\n    React.useEffect(() => {\n      if (isMounted.current) {\n        isMounted.current = false;\n        return;\n      }\n\n      (async () => {\n        // To fix the sudden jerk if \"isOn\" is true be default\n        scope.current.style.marginLeft = !isOn ? \"auto\" : 0\n\n        await animate(\n          scope.current,\n          {\n            width: \"2.5rem\"\n          },\n          {\n            duration: 0.15\n          }\n        ).finished;\n\n        scope.current.style.marginLeft = isOn ? \"auto\" : 0\n\n        await animate(\n          scope.current,\n          {\n            width: \"1.25rem\",\n          },\n          {\n            duration: 0.15\n          }\n        ).finished;\n      })();\n    }, [isOn, animate, scope]);\n\n    return (\n      <div\n        className={cn(\n          \"w-12 p-1 rounded-full shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)] cursor-pointer relative transition-colors duration-200\",\n          isOn ? \"bg-neutral-800 dark:bg-neutral-300\" : \"bg-neutral-300 dark:bg-neutral-800\",\n          className\n        )}\n        ref={ref}\n        {...props}\n        onClick={toggleOn}\n      >\n        <div\n          ref={scope}\n          className={cn(\n            \"h-5 w-5 rounded-full bg-white dark:bg-black\",\n            isOn && \"ml-auto\"\n          )}\n        />\n      </div>\n    )\n  }\n)\n\nToggle.displayName = \"Toggle\"\n\nexport { Toggle }"
    }
  ],
  "dependencies": [
    "motion"
  ]
}