{
  "name": "text-animation",
  "title": "Text Animation",
  "description": "A Text Animation component",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/text-animation.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { useAnimate, stagger, motion } from \"motion/react\"\nimport { cn } from \"@/lib/utils\";\n\ninterface TextAnimationProps {\n  text: string,\n  className?: string,\n  delay?: number,\n  duration?: number,\n  startDelay?: number,\n  staggerChildren?: number,\n  by?: \"words\" | \"chars\" | \"lines\" | \"none\",\n  blur?: boolean,\n  fade?: boolean,\n  ease?: \"easeInOut\" | \"easeIn\" | \"easeOut\",\n  direction?: \"top\" | \"bottom\" | \"right\" | \"left\",\n  animationDirection?: \"default\" | \"reverse\"\n}\n\nconst TextAnimation = ({\n  text,\n  className,\n  delay = 0,\n  duration = 0.3,\n  staggerChildren = 0.05,\n  by = \"chars\",\n  blur = true,\n  fade = true,\n  ease = \"easeInOut\",\n  direction = \"bottom\",\n  animationDirection = \"default\"\n}: TextAnimationProps) => {\n  const [scope, animate] = useAnimate();\n  const [segments, setSegments] = React.useState<string[] | null>(null);\n\n  React.useEffect(() => {\n    let segments: string[] = [];\n\n    switch (by) {\n      case \"words\":\n        segments = text.split(\" \");\n        break;\n      case \"lines\":\n        segments = text.split(\"\\n\");\n        break;\n      case \"none\":\n        segments = [text];\n        break;\n      default:\n        segments = text.split(\"\");\n        break;\n    }\n\n    setSegments(segments);\n  }, [by, text]);\n\n  // Animation = start -> end\n  const start = React.useMemo(() => (\n    {\n      opacity: fade ? 0 : 1,\n      y: direction === \"bottom\" ? 20 : direction === \"top\" ? -20 : 0,\n      x: direction === \"right\" ? 20 : direction === \"left\" ? -20 : 0,\n      filter: blur ? \"blur(10px)\" : \"none\",\n    }\n  ), [fade, direction, blur]);\n\n  // Animation = end -> start\n  const end = React.useMemo(() => (\n    {\n      opacity: 1,\n      y: 0,\n      x: 0,\n      filter: \"blur(0px)\"\n    }\n  ), [])\n\n  React.useEffect(() => {\n    if (segments) {\n      const startAnimation = () => {\n        animate(\n          \"span\",\n          animationDirection === \"default\" ? end : start,\n          {\n            duration: duration,\n            ease: ease,\n            delay: stagger(staggerChildren),\n          }\n        )\n      }\n\n      setTimeout(startAnimation, delay * 1000);\n    }\n  }, [segments, delay, animate, animationDirection, duration, ease, start, end, staggerChildren])\n\n  if (!segments) return null;\n\n  return (\n    <div\n      ref={scope}\n      className={cn(\n        \"max-w-4xl mx-auto font-bold text-4xl whitespace-pre-wrap\",\n        className\n      )}\n    >\n      {\n        segments.map((segment, idx) => (\n          <motion.span\n            initial={animationDirection === \"default\" ? start : end}\n            // custom styles for different values of by to display the spaces\n            className={cn(\n              \"inline-block\",\n              by === \"lines\" ? \"block\" : \"inline-block whitespace-pre\",\n              by === \"words\" && \"mx-1\",\n            )}\n            key={idx}\n          >\n            {segment}\n          </motion.span>\n        ))\n      }\n    </div>\n  )\n}\n\nexport { TextAnimation }"
    }
  ],
  "dependencies": [
    "motion"
  ]
}