{
  "name": "testimonials",
  "title": "Testimonials",
  "description": "A Minimal Testimonials component",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/testimonials.tsx",
      "type": "registry:ui",
      "content": "\"use client\"\r\n\r\nimport React, { useEffect, useState } from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\nimport { AnimatePresence, motion } from \"motion/react\"\r\n\r\ntype Testimonial = {\r\n  name: string,\r\n  content: string,\r\n  avatar: string\r\n}\r\n\r\nconst Testimonials = ({ testimonials }: { testimonials: Testimonial[] }) => {\r\n  const [currentTestimonial, setCurrentTestimonial] = useState(testimonials[0]);\r\n  const [pendingTestimonials, setPendingTestimonials] = useState(\r\n    testimonials.filter((_, idx) => idx > 0)\r\n  );\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setPendingTestimonials(prev => [...prev, currentTestimonial]);\r\n      setCurrentTestimonial(pendingTestimonials[0]);\r\n      setPendingTestimonials(prev => prev.slice(1));\r\n    }, 2000);\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, [currentTestimonial, pendingTestimonials]);\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <div className=\"flex justify-end items-center gap-16 w-max min-w-[18rem] h-12\">\r\n        <AnimatePresence mode=\"popLayout\">\r\n          <motion.div\r\n            key={currentTestimonial.name}\r\n            initial={{\r\n              x: 104,\r\n              filter: \"grayscale(100%)\",\r\n            }}\r\n            animate={{\r\n              x: 0,\r\n              filter: \"grayscale(0%)\",\r\n            }}\r\n            exit={{\r\n              opacity: 0,\r\n              x: -10,\r\n              scale: 0.95\r\n            }}\r\n            transition={{\r\n              duration: 0.8,\r\n              ease: [0.25, 0.1, 0.25, 1]\r\n            }}\r\n          >\r\n            <TestimonialBlock\r\n              testimonial={currentTestimonial}\r\n              className=\"shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)]\"\r\n            />\r\n          </motion.div>\r\n        </AnimatePresence>\r\n\r\n        <AnimatePresence mode=\"wait\">\r\n          <motion.span\r\n            key={currentTestimonial.name}\r\n            initial={{\r\n              opacity: 0,\r\n              y: 10,\r\n              scale: 0.95\r\n            }}\r\n            animate={{\r\n              opacity: 1,\r\n              y: 0,\r\n              scale: 1\r\n            }}\r\n            exit={{\r\n              opacity: 0,\r\n              y: -10,\r\n              scale: 0.95\r\n            }}\r\n            transition={{\r\n              duration: 0.3,\r\n              ease: [0.25, 0.1, 0.25, 1]\r\n            }}\r\n            className={cn(\r\n              \"bg-card text-card-foreground border text-sm p-4 bottom-16 left-[1.2em] absolute w-[15rem] rounded-xl\",\r\n              \"shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)]\"\r\n            )}\r\n          >\r\n            {currentTestimonial.content}\r\n            {/* Peak at the bottom */}\r\n            <div className=\"size-3 absolute -bottom-[0.4rem] left-[1rem] bg-card rotate-45 border-b border-r\" />\r\n          </motion.span>\r\n        </AnimatePresence>\r\n\r\n        <div className=\"flex items-center relative\">\r\n          <AnimatePresence mode=\"popLayout\">\r\n            {\r\n              pendingTestimonials.map((t, index) => (\r\n                <motion.div\r\n                  key={t.name}\r\n                  layout\r\n                  initial={{\r\n                    x: 20,\r\n                    opacity: 0,\r\n                    scale: 0.9\r\n                  }}\r\n                  animate={{\r\n                    x: 0,\r\n                    opacity: 1,\r\n                    scale: 1\r\n                  }}\r\n                  transition={{\r\n                    duration: 0.8,\r\n                    ease: [0.25, 0.1, 0.25, 1],\r\n                    delay: index * 0.05 // Slight stagger for smoother effect\r\n                  }}\r\n                  className=\"-mx-2\"\r\n                >\r\n                  <TestimonialBlock\r\n                    testimonial={t}\r\n                    className=\"grayscale\"\r\n                  />\r\n                </motion.div>\r\n              ))\r\n            }\r\n          </AnimatePresence>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst TestimonialBlock = ({ testimonial, className }: { testimonial: Testimonial, className?: string }) => {\r\n  return (\r\n    <motion.div\r\n      whileHover={{ scale: 1.05 }}\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      <img\r\n        src={testimonial.avatar}\r\n        alt={testimonial.name}\r\n        className={cn(\r\n          \"size-12 object-cover rounded-full shrink-0 shadow-[0_1px_1px_rgba(0,0,0,0.05),0_4px_6px_rgba(34,42,53,0.04),0_24px_68px_rgba(47,48,55,0.05),0_2px_3px_rgba(0,0,0,0.04)]\",\r\n          className\r\n        )}\r\n      />\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nTestimonials.displayName = \"Testimonials\"\r\n\r\nexport { Testimonials }"
    }
  ],
  "dependencies": [
    "motion"
  ]
}