{
  "name": "triple-toggle",
  "title": "Triple Toggle",
  "description": "A animated Triple Toggle Component",
  "type": "registry:ui",
  "files": [
    {
      "path": "registry/components/ui/triple-toggle.tsx",
      "type": "registry:ui",
      "content": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\";\n\nimport { IconPointFilled } from \"@tabler/icons-react\";\nimport { motion } from \"motion/react\"\n\nconst SLIDER_OFFSET = \"12rem\";\nconst SUB_SLIDER_OFFSET = \"5.5rem\";\n\nconst TripleToggle = ({\n  options,\n  toggleOptions,\n  value,\n  className\n}: ToggleProps) => {\n  const [doubleToggleOn, setDoubleToggleOn] = React.useState(\n    options.grouped.subOptions.includes(value)\n  );\n\n  // Set the double toggle (subslider) to \"on\" or \"off\" according to the selected option\n  React.useEffect(() => {\n    setDoubleToggleOn(value !== options.main)\n  }, [value, options.main])\n\n  // If no option is selected from subtoggle, select the first option as default\n  React.useEffect(() => {\n    if (doubleToggleOn && !options.grouped.subOptions.includes(value))\n      toggleOptions(options.grouped.subOptions[0]);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [doubleToggleOn])\n\n  const optionsVariant = {\n    on: {\n      scale: 1,\n      y: -12,\n      width: \"100%\",\n      transition: {\n        duration: 0.2,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    },\n    off: {\n      scale: 0.8,\n      y: 0,\n      width: \"max-content\",\n      transition: {\n        duration: 0.2,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    }\n  }\n\n  const sliderVariant = {\n    on: {\n      x: \"12rem\",\n      transition: {\n        duration: 0.3,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    },\n    off: {\n      x: 0,\n      transition: {\n        duration: 0.3,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    }\n  }\n\n  const titleVariant = {\n    on: {\n      opacity: 0,\n      scale: 0.8,\n      y: 20,\n      transition: {\n        duration: 0.3,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    },\n    off: {\n      opacity: 1,\n      scale: 1,\n      y: 7,\n      transition: {\n        duration: 0.3,\n        type: \"tween\",\n        ease: \"easeInOut\"\n      }\n    }\n  }\n\n  return (\n    <motion.div\n      initial={false}\n      animate={doubleToggleOn ? \"on\" : \"off\"}\n      className={cn(\n        \"p-1 bg-secondary rounded-full cursor-pointer w-max\",\n        className\n      )}\n    >\n      <div className=\"h-12 w-[24rem] rounded-full flex relative\">\n        {/* Slider */}\n        <motion.div\n          initial={{\n            x: doubleToggleOn ? SLIDER_OFFSET : 0\n          }}\n          variants={sliderVariant}\n          className=\"bg-primary h-full w-1/2 absolute rounded-full\"\n        />\n\n        <div\n          className={cn(\n            \"h-full w-1/2 rounded-full flex justify-center items-center relative transition-colors\",\n            doubleToggleOn ? \"text-primary\" : \"text-primary-foreground\"\n          )}\n          onClick={() => toggleOptions(options.main)}\n        >\n          {options.main}\n        </div>\n        <div\n          className=\"h-full w-1/2 flex flex-col justify-center items-center\"\n          onClick={() => setDoubleToggleOn(true)}\n        >\n          <motion.div variants={titleVariant}>\n            {options.grouped.title}\n          </motion.div>\n\n          <motion.div\n            variants={optionsVariant}\n            className={cn(\n              \"flex justify-between h-full w-full p-1\",\n              doubleToggleOn ? \"text-primary-foreground\" : \"text-primary\"\n            )}\n          >\n\n            {/* Sub Slider */}\n            {\n              doubleToggleOn && (\n                <motion.div\n                  initial={{\n                    x: 0,\n                  }}\n                  animate={{\n                    x: value !== options.grouped.subOptions[1] ? 0 : SUB_SLIDER_OFFSET,\n                  }}\n\n                  transition={{\n                    type: \"tween\",\n                    ease: \"easeInOut\",\n                    duration: 0.2\n                  }}\n\n                  className=\"bg-primary-foreground h-10 -top-1 w-1/2 absolute rounded-full -z-1\"\n                />\n              )\n            }\n\n            <div\n              onClick={() => toggleOptions(options.grouped.subOptions[0])}\n              className={cn(\n                \"w-1/2 text-center h-full relative\",\n                \"transition-colors duration-200\",\n                doubleToggleOn && (value === options.grouped.subOptions[0] ? \"text-primary\" : \"text-primary-foreground\"),\n              )}\n            >\n              {options.grouped.subOptions[0]}\n            </div>\n\n            <IconPointFilled className={`my-auto transition-all duration-200 ${doubleToggleOn && \"opacity-0 scale-80\"}`} size={12} />\n\n            <div\n              onClick={() => toggleOptions(options.grouped.subOptions[1])}\n              className={cn(\n                \"w-1/2 text-center h-full\",\n                \"transition-colors duration-200\",\n                doubleToggleOn && (value === options.grouped.subOptions[1] ? \"text-primary\" : \"text-primary-foreground\"),\n              )}\n            >\n              {options.grouped.subOptions[1]}\n            </div>\n          </motion.div>\n\n        </div>\n      </div>\n    </motion.div>\n  )\n}\n\nexport interface ToggleProps extends React.HTMLAttributes<HTMLDivElement> {\n  options: {\n    main: string,\n    grouped: {\n      title: string,\n      subOptions: [string, string]\n    }\n  }\n  toggleOptions: (val: string) => void,\n  value: string\n}\n\nexport { TripleToggle }"
    }
  ],
  "dependencies": [
    "@tabler/icons-react",
    "motion"
  ]
}